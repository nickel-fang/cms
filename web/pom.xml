<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cms</artifactId>
        <groupId>cn.people.cms</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>web</artifactId>
   <!-- <packaging>war</packaging>-->

    <dependencies>
        <dependency>
            <groupId>cn.people.cms</groupId>
            <artifactId>service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>cn.people.one</groupId>
            <artifactId>ueditor-core</artifactId>
            <version>2.0.0.cms-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.aliyun.openservices</groupId>
            <artifactId>aliyun-openservices</artifactId>
            <version>OTS-2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--SpringFox dependencies -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox-version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.parent.artifactId}-${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- 资源拷贝插件，因为前端编译好的文件都在static下，需要 -->
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <resources>
                        <resource>
                            <directory>
                                src/main/resources/static/
                            </directory>
                            <includes>
                                <include>*.html</include>
                            </includes>
                            <targetPath>
                                templates/
                            </targetPath>
                        </resource>

                        <!-- 静态资源 -->
                        <resource>
                            <directory>
                                src/main/resources/static/public
                            </directory>
                            <targetPath>
                                static/public
                            </targetPath>
                        </resource>

                        <!-- 静态资源 -->
                        <resource>
                            <directory>
                                src/main/resources/ueditor
                            </directory>
                            <targetPath>
                                ueditor
                            </targetPath>
                        </resource>
                        <!-- 配置文件 -->
                        <resource>
                            <directory>
                                src/main/resources
                            </directory>
                            <includes>
                                <include>**/*.xml</include>
                                <include>**/*.yml</include>
                                <include>**/*.properties</include>
                                <include>**/*.dat</include>
                                <include>**/*.txt</include>
                                <include>**/db/*.sql</include>
                            </includes>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <skipDocker>true</skipDocker>
                </configuration>
            </plugin>
        </plugins>

    </build>
</project>
